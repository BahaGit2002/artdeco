name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: art_deco
          POSTGRES_USER: postgres_2
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.0'

      - name: Show Python version
        run: python --version

      - name: Clean up package dependencies
        run: |
          sudo apt-get update
          sudo apt-get remove -y containerd containerd.io
          sudo apt-get autoremove -y
          sudo apt-get clean

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Install Docker Compose using pip
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip3 install docker-compose
          docker-compose --version

      - name: Verify Docker and Docker Compose Installation
        run: |
          docker --version
          docker-compose --version

      - name: Install Poetry
        run: python -m pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Build Docker images
        run: docker-compose -f docker-compose.yml build

      - name: Run tests
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: docker-compose -f docker-compose.yml run test
